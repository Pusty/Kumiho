#REX: RW = 66, RQ = 48
#ib,iw,id,iq = immediate byte/word/dword/qword
#/0 Immediate Encoding (0 means 0st immediate command)
#/r MOD-REG-R/M Encoding
#rmb/rmw/rmd/rmq register/displacement byte/word/dword/qword
#rb/rw/rd/rq register byte/word/dword/qword

#      == ADD ==
#ADD <rmx> <rmx>
   00 /r   ;ADD rmb,rb
RW 01 /r   ;ADD rmw,rw
   01 /r   ;ADD rmd,rd
RQ 01 /r   ;ADD rmq,rq
   02 /r   ;ADD rb,rmb
RW 03 /r   ;ADD rw,rmw
   03 /r   ;ADD rd,rmd
RQ 03 /r   ;ADD rq,rmq
#ADD <al/ax/eax/rax> immediate
   04 ib   ;ADD AL, ib
RW 05 iw   ;ADD AX, iw
   05 id   ;ADD EAX,id
RQ 05 id   ;ADD RAX,id
#   ==END OF ADD ==

#      == OR ==
   08 /r   ;OR  rmb,rb
RW 09 /r   ;OR  rmw,rw
   09 /r   ;OR  rmd,rd
RQ 09 /r   ;OR  rmq,rq
   0A /r   ;OR  rb,rmb
RW 0B /r   ;OR  rw,rmw
   0B /r   ;OR  rd,rmd
RQ 0B /r   ;OR  rq,rmq
   0C ib   ;OR  AL, ib
RW 0D iw   ;OR  AX, iw
   0D id   ;OR  EAX,id
RQ 0D id   ;OR  RAX,id
#   == END OF OR ==

#       == ADC ==
   10 /r   ;ADC rmb,rb
RW 11 /r   ;ADC rmw,rw
   11 /r   ;ADC rmd,rd
RQ 11 /r   ;ADC rmq,rq
   12 /r   ;ADC rb,rmb
RW 13 /r   ;ADC rw,rmw
   13 /r   ;ADC rd,rmd
RQ 13 /r   ;ADC rq,rmq
   14 ib   ;ADC AL, ib
RW 15 iw   ;ADC AX, iw
   15 id   ;ADC EAX,id
RQ 15 id   ;ADC RAX,id
#    == END OF ADC ==

#       == SBB ==
   18 /r   ;SBB rmb,rb
RW 19 /r   ;SBB rmw,rw
   19 /r   ;SBB rmd,rd
RQ 19 /r   ;SBB rmq,rq
   1A /r   ;SBB rb,rmb
RW 1B /r   ;SBB rw,rmw
   1B /r   ;SBB rd,rmd
RQ 1B /r   ;SBB rq,rmq
   1C ib   ;SBB AL, ib
RW 1D iw   ;SBB AX, iw
   1D id   ;SBB EAX,id
RQ 1D id   ;SBB RAX,id
#    == END OF SBB ==

#       == AND ==
   20 /r   ;AND rmb,rb
RW 21 /r   ;AND rmw,rw
   21 /r   ;AND rmd,rd
RQ 21 /r   ;AND rmq,rq
   22 /r   ;AND rb,rmb
RW 23 /r   ;AND rw,rmw
   23 /r   ;AND rd,rmd
RQ 23 /r   ;AND rq,rmq
   24 ib   ;AND AL, ib
RW 25 iw   ;AND AX, iw
   25 id   ;AND EAX,id
RQ 25 id   ;AND RAX,id
#    == END OF AND ==
   27      ;DAA AL
   27      ;DAA
#       == SUB ==
   28 /r   ;SUB rmb,rb
RW 29 /r   ;SUB rmw,rw
   29 /r   ;SUB rmd,rd
RQ 29 /r   ;SUB rmq,rq
   2A /r   ;SUB rb,rmb
RW 2B /r   ;SUB rw,rmw
   2B /r   ;SUB rd,rmd
RQ 2B /r   ;SUB rq,rmq
   2C ib   ;SUB AL, ib
RW 2D iw   ;SUB AX, iw
   2D id   ;SUB EAX,id
RQ 2D id   ;SUB RAX,id
#    == END OF SUB ==
   2F      ;DAS AL
   2F      ;DAS
#       == XOR ==
   30 /r   ;XOR rmb,rb
RW 31 /r   ;XOR rmw,rw
   31 /r   ;XOR rmd,rd
RQ 31 /r   ;XOR rmq,rq
   32 /r   ;XOR rb,rmb
RW 33 /r   ;XOR rw,rmw
   33 /r   ;XOR rd,rmd
RQ 33 /r   ;XOR rq,rmq
   34 ib   ;XOR AL, ib
RW 35 iw   ;XOR AX, iw
   35 id   ;XOR EAX,id
RQ 35 id   ;XOR RAX,id
#    == END OF XOR ==
   37      ;AAA AL,AH
   37      ;AAA
#       == CMP ==
   38 /r   ;CMP rmb,rb
RW 39 /r   ;CMP rmw,rw
   39 /r   ;CMP rmd,rd
RQ 39 /r   ;CMP rmq,rq
   3A /r   ;CMP rb,rmb
RW 3B /r   ;CMP rw,rmw
   3B /r   ;CMP rd,rmd
RQ 3B /r   ;CMP rq,rmq
   3C ib   ;CMP AL, ib
RW 3D iw   ;CMP AX, iw
   3D id   ;CMP EAX,id
RQ 3D id   ;CMP RAX,id
#    == END OF CMP ==
   3F      ;AAS AL,AH
   3F      ;AAS

#32 bit only
#INC 40+r
#      == INC 32bit only ==
RW 40      ;INC AX
RW 41      ;INC CX
RW 42      ;INC DX
RW 43      ;INC BX
RW 44      ;INC SP
RW 45      ;INC BP
RW 46      ;INC SI
RW 47      ;INC DI
   40      ;INC EAX
   41      ;INC ECX
   42      ;INC EDX
   43      ;INC EBX
   44      ;INC ESP
   45      ;INC EBP
   46      ;INC ESI
   47      ;INC EDI
#    == END OF INC 32bit only ==
#32 bit only
#DEC 48+r
#      == DEC 32bit only ==
RW 48      ;DEC AX
RW 49      ;DEC CX
RW 4A      ;DEC DX
RW 4B      ;DEC BX
RW 4C      ;DEC SP
RW 4D      ;DEC BP
RW 4E      ;DEC SI
RW 4F      ;DEC DI
   48      ;DEC EAX
   49      ;DEC ECX
   4A      ;DEC EDX
   4B      ;DEC EBX
   4C      ;DEC ESP
   4D      ;DEC EBP
   4E      ;DEC ESI
   4F      ;DEC EDI
#    == END OF DEC 32bit only ==

#      == PUSH ==
RW 50      ;PUSH AX
RW 51      ;PUSH CX
RW 52      ;PUSH DX
RW 53      ;PUSH BX
RW 54      ;PUSH SP
RW 55      ;PUSH BP
RW 56      ;PUSH SI
RW 57      ;PUSH DI
   50      ;PUSH EAX
   51      ;PUSH ECX
   52      ;PUSH EDX
   53      ;PUSH EBX
   54      ;PUSH ESP
   55      ;PUSH EBP
   56      ;PUSH ESI
   57      ;PUSH EDI
   50      ;PUSH RAX
   51      ;PUSH RCX
   52      ;PUSH RDX
   53      ;PUSH RBX
   54      ;PUSH RSP
   55      ;PUSH RBP
   56      ;PUSH RSI
   57      ;PUSH RDI
#    == END OF PUSH ==

#      == POP ==
RW 58      ;POP AX
RW 59      ;POP CX
RW 5A      ;POP DX
RW 5B      ;POP BX
RW 5C      ;POP SP
RW 5D      ;POP BP
RW 5E      ;POP SI
RW 5F      ;POP DI
   58      ;POP EAX
   59      ;POP ECX
   5A      ;POP EDX
   5B      ;POP EBX
   5C      ;POP ESP
   5D      ;POP EBP
   5E      ;POP ESI
   5F      ;POP EDI
   58      ;POP RAX
   59      ;POP RCX
   5A      ;POP RDX
   5B      ;POP RBX
   5C      ;POP RSP
   5D      ;POP RBP
   5E      ;POP RSI
   5F      ;POP RDI
#    == END OF POP ==

#Utility Pushes and Pops
   06      ;PUSH ES
   07      ;POP  ES
   0E      ;PUSH CS
   16      ;PUSH SS
   17      ;POP  SS
   1E      ;PUSH DS
   1F      ;POP  DS
   60      ;PUSHA
   60      ;PUSHAD
   61      ;POPA
   61      ;POPAD
#   ==END OF UTIL ==

#BOUND HERE TODO CUZ I DON'T UNDERSTAND
#32bit only
   63 /r   ;ARPL rmw,rw
#64bit only
   63 /r   ;MOVSXD rd, rmd
   63 /r   ;MOVSXD rq, rmd
#end only

RW 68 iw   ;PUSH iw
   68 id   ;PUSH id
   6A ib   ;PUSH ib
   
RW 69 /r iw;IMUL rw, rmw, iw
   69 /r id;IMUL rd, rmd, id
RQ 69 /r id;IMUL rq, rmq, id
RW 6B /r ib;IMUL rw, rmw, ib
   6B /r ib;IMUL rd, rmd, ib
RQ 6B /r ib;IMUL rq, rmq, ib

   6C      ;INS rmb
   6C      ;INS rmb, rmb
   6C      ;INSB
RW 6D      ;INS rmw
RW 6D      ;INS rmw, rmw
RW 6D      ;INSW
   6D      ;INS rmd
   6D      ;INS rmd, rmd
   6D      ;INSD

   6E      ;OUTS rmb
   6E      ;OUTS rmb, rmb
   6E      ;OUTSB
RW 6F      ;OUTS rmw
RW 6F      ;OUTS rmw, rmw
RW 6F      ;OUTSW
   6F      ;OUTS rmd
   6F      ;OUTS rmd, rmd
   6F      ;OUTSD

#      == JUMPS ==
   70 ib   ;JO ib
   71 ib   ;JNO ib
   72 ib   ;JB ib
   72 ib   ;JNAE ib
   72 ib   ;JC ib
   73 ib   ;JNB ib
   73 ib   ;JAE ib
   73 ib   ;JNC ib 
   74 ib   ;JZ ib
   74 ib   ;JE ib
   75 ib   ;JNZ ib
   75 ib   ;JNE ib
   76 ib   ;JBE ib
   76 ib   ;JNA ib
   77 ib   ;JNBE ib
   77 ib   ;JA ib
   78 ib   ;JS ib
   79 ib   ;JNS ib
   7A ib   ;JP ib
   7A ib   ;JPE ib
   7B ib   ;JNP ib
   7B ib   ;JPO ib
   7C ib   ;JL ib
   7C ib   ;JNGE ib
   7D ib   ;JNL ib
   7D ib   ;JGE ib
   7E ib   ;JLE ib
   7E ib   ;JNG ib
   7F ib   ;JNLE ib
   7F ib   ;JG ib
#      == END OF JUMPS ==
#      == START OF <r8/r16/r32/r64> immediate ==
   80 /0 ib;ADD rmb,ib
   80 /1 ib;OR  rmb,ib
   80 /2 ib;ADC rmb,ib
   80 /3 ib;SBB rmb,ib
   80 /4 ib;AND rmb,ib
   80 /5 ib;SUB rmb,ib
   80 /6 ib;XOR rmb,ib
   80 /7 ib;CMP rmb,ib
RW 81 /0 iw;ADD rmw,iw
   81 /0 id;ADD rmd,id
RQ 81 /0 id;ADD rmq,id
RW 81 /1 iw;OR  rmw,iw
   81 /1 id;OR  rmd,id
RQ 81 /1 id;OR  rmq,id
RW 81 /2 iw;ADC rmw,iw
   81 /2 id;ADC rmd,id
RQ 81 /2 id;ADC rmq,id
RW 81 /3 iw;SBB rmw,iw
   81 /3 id;SBB rmd,id
RQ 81 /3 id;SBB rmq,id
RW 81 /4 iw;AND rmw,iw
   81 /4 id;AND rmd,id
RQ 81 /4 id;AND rmq,id
RW 81 /5 iw;SUB rmw,iw
   81 /5 id;SUB rmd,id
RQ 81 /5 id;SUB rmq,id
RW 81 /6 iw;XOR rmw,iw
   81 /6 id;XOR rmd,id
RQ 81 /6 id;XOR rmq,id
RW 81 /7 iw;CMP rmw,iw
   81 /7 id;CMP rmd,id
RQ 81 /7 id;CMP rmq,id
   82 /0 ib;ADD rmb,ib
   82 /1 ib;OR  rmb,ib
   82 /2 ib;ADC rmb,ib
   82 /3 ib;SBB rmb,ib
   82 /4 ib;AND rmb,ib
   82 /5 ib;SUB rmb,ib
   82 /6 ib;XOR rmb,ib
   82 /7 ib;CMP rmb,ib
RW 83 /0 ib;ADD rmw,ib
   83 /0 ib;ADD rmd,ib
RQ 83 /0 ib;ADD rmq,ib
RW 83 /1 ib;OR  rmw,ib
   83 /1 ib;OR  rmd,ib
RQ 83 /1 ib;OR  rmq,ib
RW 83 /2 ib;ADC rmw,ib
   83 /2 ib;ADC rmd,ib
RQ 83 /2 ib;ADC rmq,ib
RW 83 /3 ib;SBB rmw,ib
   83 /3 ib;SBB rmd,ib
RQ 83 /3 ib;SBB rmq,ib
RW 83 /4 ib;AND rmw,ib
   83 /4 ib;AND rmd,ib
RQ 83 /4 ib;AND rmq,ib
RW 83 /5 ib;SUB rmw,ib
   83 /5 ib;SUB rmd,ib
RQ 83 /5 ib;SUB rmq,ib
RW 83 /6 ib;XOR rmw,ib
   83 /6 ib;XOR rmd,ib
RQ 83 /6 ib;XOR rmq,ib
RW 83 /7 ib;CMP rmw,ib
   83 /7 ib;CMP rmd,ib
RQ 83 /7 ib;CMP rmq,ib
#      == END OF immediate ==

   84 /r   ;TEST rmb, rb
RW 85 /r   ;TEST rmw, rw
   85 /r   ;TEST rmd, rd
RQ 85 /r   ;TEST rmq, rq

   86 /r   ;XCHG rb, rmb
RW 87 /r   ;XCHG rw, rmw
   87 /r   ;XCHG rd, rmd
RQ 87 /r   ;XCHG rq, rmq

   86 /r   ;XCHG rmb, rb
RW 87 /r   ;XCHG rmw, rw
   87 /r   ;XCHG rmd, rd
RQ 87 /r   ;XCHG rmq, rq

   88 /r   ;MOV rmb, rb
RW 89 /r   ;MOV rmw, rw
   89 /r   ;MOV rmd, rd
RQ 89 /r   ;MOV rmq, rq
   8A /r   ;MOV rb, rmb
RW 8B /r   ;MOV rw, rmw
   8B /r   ;MOV rd, rmd
RQ 8B /r   ;MOV rq, rmq

#TODO Add 8C MOV m16 Sreg (wtf is Sreg? maybe flags?)

RW 8D /r   ;LEA rw, mw
   8D /r   ;LEA rd, md
RQ 8D /r   ;LEA rq, mq

#TODO ADD 8E MOV Sreg r/m16

RW 8F /0   ;POP mw
# \/ only 32bit
   8F /0   ;POP md
# \/ only 64bit
RQ 8F /0   ;POP mq

#      == START OF XCHG ==
   90      ;NOP
RW 90      ;XCHG AX, AX
RW 90      ;XCHG AX
RW 91      ;XCHG CX, AX
RW 91      ;XCHG AX, CX
RW 91      ;XCHG CX
RW 92      ;XCHG DX, AX
RW 92      ;XCHG AX, DX
RW 92      ;XCHG DX
RW 93      ;XCHG BX, AX
RW 93      ;XCHG AX, BX
RW 93      ;XCHG BX
RW 94      ;XCHG SP, AX
RW 94      ;XCHG AX, SX
RW 94      ;XCHG SP
RW 95      ;XCHG BP, AX
RW 95      ;XCHG AX, BP
RW 95      ;XCHG BP
RW 96      ;XCHG SI, AX
RW 96      ;XCHG AX, SI
RW 96      ;XCHG SI
RW 97      ;XCHG DI, AX
RW 97      ;XCHG AX, DI
RW 97      ;XCHG DI
   90      ;XCHG EAX, EAX
   90      ;XCHG EAX
   91      ;XCHG ECX, EAX
   91      ;XCHG EAX, ECX
   91      ;XCHG ECX
   92      ;XCHG EDX, EAX
   92      ;XCHG EAX, EDX
   92      ;XCHG EDX
   93      ;XCHG EBX, EAX
   93      ;XCHG EAX, EBX
   93      ;XCHG EBX
   94      ;XCHG ESP, EAX
   94      ;XCHG EAX, ESP
   94      ;XCHG ESP
   95      ;XCHG EBP, EAX
   95      ;XCHG EAX, EBP
   95      ;XCHG EBP
   96      ;XCHG ESI, EAX
   96      ;XCHG EAX, ESI
   96      ;XCHG ESI
   97      ;XCHG EDI, EAX
   97      ;XCHG EAX, EDI
   97      ;XCHG EDI
RQ 90      ;XCHG RAX, RAX
RQ 90      ;XCHG RAX
RQ 91      ;XCHG RCX, RAX
RQ 91      ;XCHG RAX, RCX
RQ 91      ;XCHG RCX
RQ 92      ;XCHG RDX, RAX
RQ 92      ;XCHG RAX, RDX
RQ 92      ;XCHG RDX
RQ 93      ;XCHG RBX, RAX
RQ 93      ;XCHG RAX, RBX
RQ 93      ;XCHG RBX
RQ 94      ;XCHG RSP, RAX
RQ 94      ;XCHG RAX, RSP
RQ 94      ;XCHG RSP
RQ 95      ;XCHG RBP, RAX
RQ 95      ;XCHG RAX, RBP
RQ 95      ;XCHG RBP
RQ 96      ;XCHG RSI, RAX
RQ 96      ;XCHG RAX, RSI
RQ 96      ;XCHG RSI
RQ 97      ;XCHG RDI, RAX
RQ 97      ;XCHG RAX, RDI
RQ 97      ;XCHG RDI
#      == END OF XCHG ==

#F3 90 => PAUSE

RW 98      ;CBW
RW 98      ;CBW AX, AL
   98      ;CBDE
   98      ;CBDE EAX, AX
RQ 98      ;CBQE
RQ 98      ;CBQE RAX, EAX
RW 99      ;CWD DX, AX
RW 99      ;CWD
   99      ;CWQ EDX, EAX
   99      ;CWQ
   99      ;CDQ EDX, EAX
   99      ;CDQ
RQ 99      ;CQO RDX, RAX
RQ 99      ;CQO
   9A      ;CALLF id
#   9B      ;WAIT
#   9B      ;FWAIT
   9C      ;PUSHF
   9C      ;PUSHFD
   9C      ;PUSHFQ
   9D      ;POPF
   9D      ;POPFD
   9D      ;POPFQ
   9E      ;SAHF
   9E      ;SAHF AH
   9F      ;LAHF
   9F      ;LAHF AH
#official instruction name is MOV, but I don't have a sepperate case for relative addressing to RMOV instead
RQ A0      ;RMOV AL, ib
   A0      ;RMOV AL, ib
   A1      ;RMOV EAX, iw
RQ A1      ;RMOV RAX, iq  
   A2      ;RMOV ib, AL
RQ A2      ;RMOV ib, AL
   A3      ;RMOV id, EAX
RQ A3      ;RMOV iq, RAX


   A4      ;MOVSB
   A4      ;MOVS  mb
RW A5      ;MOVSW
RW A5      ;MOVS  mw
   A5      ;MOVSD
   A5      ;MOVS  md
RQ A5      ;MOVSQ
RQ A5      ;MOVS  mq

   A6      ;CMPSB
   A6      ;CMPS  mb
RW A7      ;CMPSW
RW A7      ;CMPS  mw
   A7      ;CMPSD
   A7      ;CMPS  md
RQ A7      ;CMPSQ
RQ A7      ;CMPS  mq

   A8 ib   ;TEST AL, ib
RW A9 iw   ;TEST AX, iw
   A9 id   ;TEST EAX, id
RQ A9 id   ;TEST RAX, id

   AA      ;STOSB
   AA      ;STOS  mb
RW AB      ;STOSW
RW AB      ;STOS  mw
   AB      ;STOSD
   AB      ;STOS  md
RQ AB      ;STOSQ
RQ AB      ;STOS  mq

   AC      ;LODSB
   AC      ;LODS  mb
RW AD      ;LODSW
RW AD      ;LODS  mw
   AD      ;LODSD
   AD      ;LODS  md
RQ AD      ;LODSQ
RQ AD      ;LODS  mq

   AE      ;SCASB
   AE      ;SCAS  mb
RW AF      ;SCASW
RW AF      ;SCAS  mw
   AF      ;SCASD
   AF      ;SCAS  md
RQ AF      ;SCASQ
RQ AF      ;SCAS  mq


#      == MOV immediate ==
   B0 ib   ;MOV AL, ib
   B1 ib   ;MOV CL, ib
   B2 ib   ;MOV DL, ib
   B3 ib   ;MOV BL, ib
   B4 ib   ;MOV AH, ib
   B5 ib   ;MOV CH, ib
   B6 ib   ;MOV DH, ib
   B7 ib   ;MOV AH, ib
RW B8 iw   ;MOV AX, iw
RW B9 iw   ;MOV CX, iw
RW BA iw   ;MOV DX, iw
RW BB iw   ;MOV BX, iw
RW BC iw   ;MOV SP, iw
RW BD iw   ;MOV BP, iw
RW BE iw   ;MOV SI, iw
RW BF iw   ;MOV DI, iw
   B8 id   ;MOV EAX, id
   B9 id   ;MOV ECX, id
   BA id   ;MOV EDX, id
   BB id   ;MOV EBX, id
   BC id   ;MOV ESP, id
   BD id   ;MOV EBP, id
   BE id   ;MOV ESI, id
   BF id   ;MOV EDI, id
RQ B8 iq   ;MOV RAX, iq
RQ B9 iq   ;MOV RCX, iq
RQ BA iq   ;MOV RDX, iq
RQ BB iq   ;MOV RBX, iq
RQ BC iq   ;MOV RSP, iq
RQ BD iq   ;MOV RBP, iq
RQ BE iq   ;MOV RSI, iq
RQ BF iq   ;MOV RDI, iq
#    == END OF MOV immediate ==

   C0 /0 ib;ROL rmb, ib
   C0 /1 ib;ROR rmb, ib
   C0 /2 ib;RCL rmb, ib
   C0 /3 ib;RCR rmb, ib
   C0 /4 ib;SHL rmb, ib
   C0 /4 ib;SAL rmb, ib
   C0 /5 ib;SHR rmb, ib
   C0 /6 ib;SAL rmb, ib
   C0 /6 ib;SHL rmb, ib
   C0 /7 ib;SAR rmb, ib
 
RW C1 /0 ib;ROL rmw, ib
RW C1 /1 ib;ROR rmw, ib
RW C1 /2 ib;RCL rmw, ib
RW C1 /3 ib;RCR rmw, ib
RW C1 /4 ib;SHL rmw, ib
RW C1 /4 ib;SAL rmw, ib
RW C1 /5 ib;SHR rmw, ib
RW C1 /6 ib;SAL rmw, ib
RW C1 /6 ib;SHL rmw, ib
RW C1 /7 ib;SAR rmw, ib
   
   C1 /0 ib;ROL rmd, ib
   C1 /1 ib;ROR rmd, ib
   C1 /2 ib;RCL rmd, ib
   C1 /3 ib;RCR rmd, ib
   C1 /4 ib;SHL rmd, ib
   C1 /4 ib;SAL rmd, ib
   C1 /5 ib;SHR rmd, ib
   C1 /6 ib;SAL rmd, ib
   C1 /6 ib;SHL rmd, ib
   C1 /7 ib;SAR rmd, ib

RQ C1 /0 ib;ROL rmq, ib
RQ C1 /1 ib;ROR rmq, ib
RQ C1 /2 ib;RCL rmq, ib
RQ C1 /3 ib;RCR rmq, ib
RQ C1 /4 ib;SHL rmq, ib
RQ C1 /4 ib;SAL rmq, ib
RQ C1 /5 ib;SHR rmq, ib
RQ C1 /6 ib;SAL rmq, ib
RQ C1 /6 ib;SHL rmq, ib
RQ C1 /7 ib;SAR rmq, ib

   C2 iw   ;RET  iw
   C2 iw   ;RETN iw
   C3      ;RET
   C3      ;RETN
   
RW C4 /r   ;LES rw, mw
   C4 /r   ;LES rd, md
RW C5 /r   ;LDS rw, mw
   C5 /r   ;LDS rd, md
   
   C6 /0 ib;MOV rmb, ib
RW C7 /0 iw;MOV rmw, iw
   C7 /0 id;MOV rmd, id
RQ C7 /0 id;MOV rmq, id

   C8 iw ib;ENTER iw, ib
   C9      ;LEAVE
   
   CA iw   ;RETF iw
   CB      ;RETF
   CC      ;INT 3
   CD ib   ;INT ib
   CE      ;INTO
RW CF      ;IRET
   CF      ;IRETD
RQ CF      ;IRETQ

   D0 /0   ;ROL rmb, 1
   D0 /1   ;ROR rmb, 1
   D0 /2   ;RCL rmb, 1
   D0 /3   ;RCR rmb, 1
   D0 /4   ;SHL rmb, 1
   D0 /4   ;SAL rmb, 1
   D0 /5   ;SHR rmb, 1
   D0 /6   ;SAL rmb, 1
   D0 /6   ;SHL rmb, 1
   D0 /7   ;SAR rmb, 1
 
RW D1 /0   ;ROL rmw, 1
RW D1 /1   ;ROR rmw, 1
RW D1 /2   ;RCL rmw, 1
RW D1 /3   ;RCR rmw, 1
RW D1 /4   ;SHL rmw, 1
RW D1 /4   ;SAL rmw, 1
RW D1 /5   ;SHR rmw, 1
RW D1 /6   ;SAL rmw, 1
RW D1 /6   ;SHL rmw, 1
RW D1 /7   ;SAR rmw, 1
   
   D1 /0   ;ROL rmd, 1
   D1 /1   ;ROR rmd, 1
   D1 /2   ;RCL rmd, 1
   D1 /3   ;RCR rmd, 1
   D1 /4   ;SHL rmd, 1
   D1 /4   ;SAL rmd, 1
   D1 /5   ;SHR rmd, 1
   D1 /6   ;SAL rmd, 1
   D1 /6   ;SHL rmd, 1
   D1 /7   ;SAR rmd, 1

RQ D1 /0   ;ROL rmq, 1
RQ D1 /1   ;ROR rmq, 1
RQ D1 /2   ;RCL rmq, 1
RQ D1 /3   ;RCR rmq, 1
RQ D1 /4   ;SHL rmq, 1
RQ D1 /4   ;SAL rmq, 1
RQ D1 /5   ;SHR rmq, 1
RQ D1 /6   ;SAL rmq, 1
RQ D1 /6   ;SHL rmq, 1
RQ D1 /7   ;SAR rmq, 1

   D2 /0   ;ROL rmb, CL
   D2 /1   ;ROR rmb, CL
   D2 /2   ;RCL rmb, CL
   D2 /3   ;RCR rmb, CL
   D2 /4   ;SHL rmb, CL
   D2 /4   ;SAL rmb, CL
   D2 /5   ;SHR rmb, CL
   D2 /6   ;SAL rmb, CL
   D2 /6   ;SHL rmb, CL
   D2 /7   ;SAR rmb, CL
 
RW D3 /0   ;ROL rmw, CL
RW D3 /1   ;ROR rmw, CL
RW D3 /2   ;RCL rmw, CL
RW D3 /3   ;RCR rmw, CL
RW D3 /4   ;SHL rmw, CL
RW D3 /4   ;SAL rmw, CL
RW D3 /5   ;SHR rmw, CL
RW D3 /6   ;SAL rmw, CL
RW D3 /6   ;SHL rmw, CL
RW D3 /7   ;SAR rmw, CL
   
   D3 /0   ;ROL rmd, CL
   D3 /1   ;ROR rmd, CL
   D3 /2   ;RCL rmd, CL
   D3 /3   ;RCR rmd, CL
   D3 /4   ;SHL rmd, CL
   D3 /4   ;SAL rmd, CL
   D3 /5   ;SHR rmd, CL
   D3 /6   ;SAL rmd, CL
   D3 /6   ;SHL rmd, CL
   D3 /7   ;SAR rmd, CL

RQ D3 /0   ;ROL rmq, CL
RQ D3 /1   ;ROR rmq, CL
RQ D3 /2   ;RCL rmq, CL
RQ D3 /3   ;RCR rmq, CL
RQ D3 /4   ;SHL rmq, CL
RQ D3 /4   ;SAL rmq, CL
RQ D3 /5   ;SHR rmq, CL
RQ D3 /6   ;SAL rmq, CL
RQ D3 /6   ;SHL rmq, CL
RQ D3 /7   ;SAR rmq, CL

   D4 0A   ;AAM
   D4 ib   ;AMX ib
   D5 0A   ;AAD
   D5 ib   ;ADX ib
   D6      ;SALC
   D6      ;SETALC
   D7      ;XLAT
   D7      ;XLATB

#FLOATING POINT INSTRUCTIONS:
   D8 /0   ;FADD md
   D8 /1   ;FMUL md
   D8 /2   ;FCOM md
   D8 /3   ;FCOMP md
   D8 /4   ;FSUB md
   D8 /5   ;FSUBR md
   D8 /6   ;FDIV md
   D8 /7   ;FDIVR md 
   D9 /0   ;FLD md
   D9 /2   ;FST md
   D9 /3   ;FSTP md
#actuall it writes 14/28 bytes but whatever
   D9 /4   ;FLDENV md
   D9 /5   ;FLDCW mw
#actuall it writes 14/28 bytes but whatever
   D9 /6   ;FNSTENV md
   9B D9 /6;FNSTENV md
   D9 /7   ;FNSTCW  md
   9B D9 /7;FSTCW   md  
   DA /0   ;FIADD md
   DA /1   ;FIMUL md
   DA /2   ;FICOM md
   DA /3   ;FICOMP md
   DA /4   ;FISUB md
   DA /5   ;FISUBR md
   DA /6   ;FIDIV md
   DA /7   ;FIDIVR md  
   DB /0   ;FILD md
   DB /1   ;FISTTP md
   DB /2   ;FIST md
   DB /3   ;FISTP md
#   DB /5   ;FLD me
#   DB /7   ;FSTP me 
   DC /0   ;FADD mq
   DC /1   ;FMUL mq
   DC /2   ;FCOM mq
   DC /3   ;FCOMP mq
   DC /4   ;FSUB mq
   DC /5   ;FSUBR mq
   DC /6   ;FDIV mq
   DC /7   ;FDIVR mq
   DD /0   ;FLD mq
   DD /1   ;FISTTP mq
   DD /2   ;FST mq
   DD /3   ;FSTP mq
   DD /7   ;FNSTSW mw
   9B DD /7;FSTSW  mw
   DE /0   ;FIADD mw
   DE /1   ;FIMUL mw
   DE /2   ;FICOM mw
   DE /3   ;FICOMP mw
   DE /4   ;FISUB mw
   DE /5   ;FISUBR mw
   DE /6   ;FIDIV mw
   DE /7   ;FIDIVR mw
   DF /0   ;FILD mw
   DF /1   ;FISTTP mw
   DF /2   ;FIST mw
   DF /3   ;FISTP mw
#   DF /4   ;FBLD me
   DF /5   ;FILD mq
#   DF /6   ;FBSTP me
   DF /7   ;FISTP mq

#   D8 C0+i ;FASS ST0, STi
#   D8 C8+i ;FMUL ST0, STi
#   D8 D0+i ;FCOM STi
#   D8 D8+i ;FCOMP STi
#   D8 E0+i ;FSUB ST0, STi
#   D8 E8+i ;FSUBR ST0, STi
#   D8 F0+i ;FDIV ST0, STi
#   D8 F8+i ;FDIVR ST0, STi
#   D9 C0+i ;FLD STi
#   D9 C8+i ;FXCH STi
#   DA C0+i ;FCMOVB   ST0, STi
#   DA C8+i ;FCMOVE   ST0, STi
#   DA D0+i ;FCMOVBE  ST0, STi
#   DA D8+i ;FCMOVU   ST0, STi
#   DB C0+i ;FCMOVNB  ST0, STi
#   DB C8+i ;FCMOVNE  ST0, STi
#   DB D0+i ;FCMOVNBE ST0, STi
#   DB D8+i ;FCMOVNU  ST0, STi
#   DB E8+i ;FUCOMI   ST0, STi
#   DB F0+i ;FCOMI    ST0, STi
#   DC C0+i ;FADD STi, ST0
#   DC C8+i ;FMUL STi, ST0
#   DC E0+i ;FSUBR STi, ST0
#   DC E8+i ;FSUB STi, ST0
#   DC F0+i ;FDIVR STi, ST0
#   DC F8+i ;FDIV STi, ST0
#   DD C0+i ;FFREE STi
#   DD D0+i ;FST STi
#   DD D8+i ;FSTP STi
#   DE C0+i ;FADDP STi, ST0
#   DE C8+i ;FMULP STi, ST0
#   DE E0+i ;FSUBRP STi, ST0
#   DE E8+i ;FSUBP STi, ST0
#   DE F0+i ;FDIVRP STi, ST0
#   DE F8+i ;FDIVP STi, ST0
#   DF E8+i ;FUCOMIP ST0, STi
#   DF F0+i ;FCOMIP  ST0, STi

   D8 C0 ;FASS ST0, ST0
   D8 C1 ;FASS ST0, ST1
   D8 C2 ;FASS ST0, ST2
   D8 C3 ;FASS ST0, ST3
   D8 C4 ;FASS ST0, ST4
   D8 C5 ;FASS ST0, ST5
   D8 C6 ;FASS ST0, ST6
   D8 C7 ;FASS ST0, ST7
   D8 C8 ;FMUL ST0, ST0
   D8 C9 ;FMUL ST0, ST1
   D8 CA ;FMUL ST0, ST2
   D8 CB ;FMUL ST0, ST3
   D8 CC ;FMUL ST0, ST4
   D8 CD ;FMUL ST0, ST5
   D8 CE ;FMUL ST0, ST6
   D8 CF ;FMUL ST0, ST7
   D8 D0 ;FCOM ST0
   D8 D1 ;FCOM ST1
   D8 D2 ;FCOM ST2
   D8 D3 ;FCOM ST3
   D8 D4 ;FCOM ST4
   D8 D5 ;FCOM ST5
   D8 D6 ;FCOM ST6
   D8 D7 ;FCOM ST7
   D8 D8 ;FCOMP ST0
   D8 D9 ;FCOMP ST1
   D8 DA ;FCOMP ST2
   D8 DB ;FCOMP ST3
   D8 DC ;FCOMP ST4
   D8 DD ;FCOMP ST5
   D8 DE ;FCOMP ST6
   D8 DF ;FCOMP ST7
   D8 E0 ;FSUB ST0, ST0
   D8 E1 ;FSUB ST0, ST1
   D8 E2 ;FSUB ST0, ST2
   D8 E3 ;FSUB ST0, ST3
   D8 E4 ;FSUB ST0, ST4
   D8 E5 ;FSUB ST0, ST5
   D8 E6 ;FSUB ST0, ST6
   D8 E7 ;FSUB ST0, ST7
   D8 E8 ;FSUBR ST0, ST0
   D8 E9 ;FSUBR ST0, ST1
   D8 EA ;FSUBR ST0, ST2
   D8 EB ;FSUBR ST0, ST3
   D8 EC ;FSUBR ST0, ST4
   D8 ED ;FSUBR ST0, ST5
   D8 EE ;FSUBR ST0, ST6
   D8 EF ;FSUBR ST0, ST7
   D8 F0 ;FDIV ST0, ST0
   D8 F1 ;FDIV ST0, ST1
   D8 F2 ;FDIV ST0, ST2
   D8 F3 ;FDIV ST0, ST3
   D8 F4 ;FDIV ST0, ST4
   D8 F5 ;FDIV ST0, ST5
   D8 F6 ;FDIV ST0, ST6
   D8 F7 ;FDIV ST0, ST7
   D8 F8 ;FDIVR ST0, ST0
   D8 F9 ;FDIVR ST0, ST1
   D8 FA ;FDIVR ST0, ST2
   D8 FB ;FDIVR ST0, ST3
   D8 FC ;FDIVR ST0, ST4
   D8 FD ;FDIVR ST0, ST5
   D8 FE ;FDIVR ST0, ST6
   D8 FF ;FDIVR ST0, ST7
   D9 C0 ;FLD ST0
   D9 C1 ;FLD ST1
   D9 C2 ;FLD ST2
   D9 C3 ;FLD ST3
   D9 C4 ;FLD ST4
   D9 C5 ;FLD ST5
   D9 C6 ;FLD ST6
   D9 C7 ;FLD ST7
   D9 C8 ;FXCH ST0
   D9 C9 ;FXCH ST1
   D9 CA ;FXCH ST2
   D9 CB ;FXCH ST3
   D9 CC ;FXCH ST4
   D9 CD ;FXCH ST5
   D9 CE ;FXCH ST6
   D9 CF ;FXCH ST7
   DA C0 ;FCMOVB   ST0, ST0
   DA C1 ;FCMOVB   ST0, ST1
   DA C2 ;FCMOVB   ST0, ST2
   DA C3 ;FCMOVB   ST0, ST3
   DA C4 ;FCMOVB   ST0, ST4
   DA C5 ;FCMOVB   ST0, ST5
   DA C6 ;FCMOVB   ST0, ST6
   DA C7 ;FCMOVB   ST0, ST7
   DA C8 ;FCMOVE   ST0, ST0
   DA C9 ;FCMOVE   ST0, ST1
   DA CA ;FCMOVE   ST0, ST2
   DA CB ;FCMOVE   ST0, ST3
   DA CC ;FCMOVE   ST0, ST4
   DA CD ;FCMOVE   ST0, ST5
   DA CE ;FCMOVE   ST0, ST6
   DA CF ;FCMOVE   ST0, ST7
   DA D0 ;FCMOVBE  ST0, ST0
   DA D1 ;FCMOVBE  ST0, ST1
   DA D2 ;FCMOVBE  ST0, ST2
   DA D3 ;FCMOVBE  ST0, ST3
   DA D4 ;FCMOVBE  ST0, ST4
   DA D5 ;FCMOVBE  ST0, ST5
   DA D6 ;FCMOVBE  ST0, ST6
   DA D7 ;FCMOVBE  ST0, ST7
   DA D8 ;FCMOVU   ST0, ST0
   DA D9 ;FCMOVU   ST0, ST1
   DA DA ;FCMOVU   ST0, ST2
   DA DB ;FCMOVU   ST0, ST3
   DA DC ;FCMOVU   ST0, ST4
   DA DD ;FCMOVU   ST0, ST5
   DA DE ;FCMOVU   ST0, ST6
   DA DF ;FCMOVU   ST0, ST7
   DB C0 ;FCMOVNB  ST0, ST0
   DB C1 ;FCMOVNB  ST0, ST1
   DB C2 ;FCMOVNB  ST0, ST2
   DB C3 ;FCMOVNB  ST0, ST3
   DB C4 ;FCMOVNB  ST0, ST4
   DB C5 ;FCMOVNB  ST0, ST5
   DB C6 ;FCMOVNB  ST0, ST6
   DB C7 ;FCMOVNB  ST0, ST7
   DB C8 ;FCMOVNE  ST0, ST0
   DB C9 ;FCMOVNE  ST0, ST1
   DB CA ;FCMOVNE  ST0, ST2
   DB CB ;FCMOVNE  ST0, ST3
   DB CC ;FCMOVNE  ST0, ST4
   DB CD ;FCMOVNE  ST0, ST5
   DB CE ;FCMOVNE  ST0, ST6
   DB CF ;FCMOVNE  ST0, ST7
   DB D0 ;FCMOVNBE ST0, ST0
   DB D1 ;FCMOVNBE ST0, ST1
   DB D2 ;FCMOVNBE ST0, ST2
   DB D3 ;FCMOVNBE ST0, ST3
   DB D4 ;FCMOVNBE ST0, ST4
   DB D5 ;FCMOVNBE ST0, ST5
   DB D6 ;FCMOVNBE ST0, ST6
   DB D7 ;FCMOVNBE ST0, ST7
   DB D8 ;FCMOVNU  ST0, ST0
   DB D9 ;FCMOVNU  ST0, ST1
   DB DA ;FCMOVNU  ST0, ST2
   DB DB ;FCMOVNU  ST0, ST3
   DB DC ;FCMOVNU  ST0, ST4
   DB DD ;FCMOVNU  ST0, ST5
   DB DE ;FCMOVNU  ST0, ST6
   DB DF ;FCMOVNU  ST0, ST7
   DB E8 ;FUCOMI   ST0, ST0
   DB E9 ;FUCOMI   ST0, ST1
   DB EA ;FUCOMI   ST0, ST2
   DB EB ;FUCOMI   ST0, ST3
   DB EC ;FUCOMI   ST0, ST4
   DB ED ;FUCOMI   ST0, ST5
   DB EE ;FUCOMI   ST0, ST6
   DB EF ;FUCOMI   ST0, ST7
   DB F0 ;FCOMI    ST0, ST0
   DB F1 ;FCOMI    ST0, ST1
   DB F2 ;FCOMI    ST0, ST2
   DB F3 ;FCOMI    ST0, ST3
   DB F4 ;FCOMI    ST0, ST4
   DB F5 ;FCOMI    ST0, ST5
   DB F6 ;FCOMI    ST0, ST6
   DB F7 ;FCOMI    ST0, ST7
   DC C0 ;FADD ST0, ST0
   DC C1 ;FADD ST1, ST0
   DC C2 ;FADD ST2, ST0
   DC C3 ;FADD ST3, ST0
   DC C4 ;FADD ST4, ST0
   DC C5 ;FADD ST5, ST0
   DC C6 ;FADD ST6, ST0
   DC C7 ;FADD ST7, ST0
   DC C8 ;FMUL ST0, ST0
   DC C9 ;FMUL ST1, ST0
   DC CA ;FMUL ST2, ST0
   DC CB ;FMUL ST3, ST0
   DC CC ;FMUL ST4, ST0
   DC CD ;FMUL ST5, ST0
   DC CE ;FMUL ST6, ST0
   DC CF ;FMUL ST7, ST0
   DC E0 ;FSUBR ST0, ST0
   DC E1 ;FSUBR ST1, ST0
   DC E2 ;FSUBR ST2, ST0
   DC E3 ;FSUBR ST3, ST0
   DC E4 ;FSUBR ST4, ST0
   DC E5 ;FSUBR ST5, ST0
   DC E6 ;FSUBR ST6, ST0
   DC E7 ;FSUBR ST7, ST0
   DC E8 ;FSUB ST0, ST0
   DC E9 ;FSUB ST1, ST0
   DC EA ;FSUB ST2, ST0
   DC EB ;FSUB ST3, ST0
   DC EC ;FSUB ST4, ST0
   DC ED ;FSUB ST5, ST0
   DC EE ;FSUB ST6, ST0
   DC EF ;FSUB ST7, ST0
   DC F0 ;FDIVR ST0, ST0
   DC F1 ;FDIVR ST1, ST0
   DC F2 ;FDIVR ST2, ST0
   DC F3 ;FDIVR ST3, ST0
   DC F4 ;FDIVR ST4, ST0
   DC F5 ;FDIVR ST5, ST0
   DC F6 ;FDIVR ST6, ST0
   DC F7 ;FDIVR ST7, ST0
   DC F8 ;FDIV ST0, ST0
   DC F9 ;FDIV ST1, ST0
   DC FA ;FDIV ST2, ST0
   DC FB ;FDIV ST3, ST0
   DC FC ;FDIV ST4, ST0
   DC FD ;FDIV ST5, ST0
   DC FE ;FDIV ST6, ST0
   DC FF ;FDIV ST7, ST0
   DD C0 ;FFREE ST0
   DD C1 ;FFREE ST1
   DD C2 ;FFREE ST2
   DD C3 ;FFREE ST3
   DD C4 ;FFREE ST4
   DD C5 ;FFREE ST5
   DD C6 ;FFREE ST6
   DD C7 ;FFREE ST7
   DD D0 ;FST ST0
   DD D1 ;FST ST1
   DD D2 ;FST ST2
   DD D3 ;FST ST3
   DD D4 ;FST ST4
   DD D5 ;FST ST5
   DD D6 ;FST ST6
   DD D7 ;FST ST7
   DD D8 ;FSTP ST0
   DD D9 ;FSTP ST1
   DD DA ;FSTP ST2
   DD DB ;FSTP ST3
   DD DC ;FSTP ST4
   DD DD ;FSTP ST5
   DD DE ;FSTP ST6
   DD DF ;FSTP ST7
   DE C0 ;FADDP ST0, ST0
   DE C1 ;FADDP ST1, ST0
   DE C2 ;FADDP ST2, ST0
   DE C3 ;FADDP ST3, ST0
   DE C4 ;FADDP ST4, ST0
   DE C5 ;FADDP ST5, ST0
   DE C6 ;FADDP ST6, ST0
   DE C7 ;FADDP ST7, ST0
   DE C8 ;FMULP ST0, ST0
   DE C9 ;FMULP ST1, ST0
   DE CA ;FMULP ST2, ST0
   DE CB ;FMULP ST3, ST0
   DE CC ;FMULP ST4, ST0
   DE CD ;FMULP ST5, ST0
   DE CE ;FMULP ST6, ST0
   DE CF ;FMULP ST7, ST0
   DE E0 ;FSUBRP ST0, ST0
   DE E1 ;FSUBRP ST1, ST0
   DE E2 ;FSUBRP ST2, ST0
   DE E3 ;FSUBRP ST3, ST0
   DE E4 ;FSUBRP ST4, ST0
   DE E5 ;FSUBRP ST5, ST0
   DE E6 ;FSUBRP ST6, ST0
   DE E7 ;FSUBRP ST7, ST0
   DE E8 ;FSUBP ST0, ST0
   DE E9 ;FSUBP ST1, ST0
   DE EA ;FSUBP ST2, ST0
   DE EB ;FSUBP ST3, ST0
   DE EC ;FSUBP ST4, ST0
   DE ED ;FSUBP ST5, ST0
   DE EE ;FSUBP ST6, ST0
   DE EF ;FSUBP ST7, ST0
   DE F0 ;FDIVRP ST0, ST0
   DE F1 ;FDIVRP ST1, ST0
   DE F2 ;FDIVRP ST2, ST0
   DE F3 ;FDIVRP ST3, ST0
   DE F4 ;FDIVRP ST4, ST0
   DE F5 ;FDIVRP ST5, ST0
   DE F6 ;FDIVRP ST6, ST0
   DE F7 ;FDIVRP ST7, ST0
   DE F8 ;FDIVP ST0, ST0
   DE F9 ;FDIVP ST1, ST0
   DE FA ;FDIVP ST2, ST0
   DE FB ;FDIVP ST3, ST0
   DE FC ;FDIVP ST4, ST0
   DE FD ;FDIVP ST5, ST0
   DE FE ;FDIVP ST6, ST0
   DE FF ;FDIVP ST7, ST0
   DF E8 ;FUCOMIP ST0, ST0
   DF E9 ;FUCOMIP ST0, ST1
   DF EA ;FUCOMIP ST0, ST2
   DF EB ;FUCOMIP ST0, ST3
   DF EC ;FUCOMIP ST0, ST4
   DF ED ;FUCOMIP ST0, ST5
   DF EE ;FUCOMIP ST0, ST6
   DF EF ;FUCOMIP ST0, ST7
   DF F0 ;FCOMIP  ST0, ST0
   DF F1 ;FCOMIP  ST0, ST1
   DF F2 ;FCOMIP  ST0, ST2
   DF F3 ;FCOMIP  ST0, ST3
   DF F4 ;FCOMIP  ST0, ST4
   DF F5 ;FCOMIP  ST0, ST5
   DF F6 ;FCOMIP  ST0, ST6
   DF F7 ;FCOMIP  ST0, ST7
   
   D8 D1   ;FCOM
   D8 D9   ;FCOMP
   D9 C9   ;FXCH
   D9 D0   ;FNOP
   D9 E0   ;FCHS
   D9 E1   ;FABS
   D9 E4   ;FTST
   D9 E5   ;FXAM
   D9 E8   ;FKD1
   D9 E9   ;FLDL2T
   D9 EA   ;FLDL2E
   D9 EB   ;FLDPI
   D9 EC   ;FLDLG2
   D9 ED   ;FLDLN2
   D9 EE   ;FLDZ
   D9 F0   ;F2XM1
   D9 F1   ;FYL2X
   D9 F2   ;FPTAN
   D9 F3   ;FPATAN
   D9 F4   ;FXTRACT
   D9 F5   ;FPREM1
   D9 F6   ;FDECSTP
   D9 F7   ;FINCSTP
   D9 F8   ;FPREM
   D9 F9   ;FYL2XP1
   D9 FA   ;FSQRT
   D9 FB   ;FSINCOS
   D9 FC   ;FRNDINT
   D9 FD   ;FSCALE
   D9 FE   ;FSIN
   D9 FF   ;FCOS 
   DB E2    ;FNCLEX
   9B DB E2 ;FCLEX
   DB E3    ;FNINIT
   9B DB E3 ;FINIT
   DE C1   ;FADDP
   DE C9   ;FMULP
   DE D9   ;FCOMPP
   DE E1   ;FSUBRP
   DE E9   ;FSUBP
   DE F1   ;FDIVRP
   DE F9   ;FDIVP
   DF E0   ;FNSTSW AX
   9B DF E0;FSTSW  AX
#  END FLOATING POINT INSTRUCTIONS
   
   E0 ib   ;LOOPNZ ib
   E0 ib   ;LOOPNE ib
   E1 ib   ;LOOPZ  ib
   E1 ib   ;LOOPE  ib
   E2 ib   ;LOOP   ib
   E2 ib   ;LOOP   ib
   E3 ib   ;JCXZ   ib
   E3 ib   ;JECXZ  ib
   E3 ib   ;JRCXZ  ib

   E4 ib   ;IN AL, ib
   E4 ib   ;IN ib
RW E5 ib   ;IN AX, ib
   E5 ib   ;IN EAX, ib
RQ E5 ib   ;IN RAX, ib
   E6 ib   ;OUT AL, ib
   E6 ib   ;OUT ib
RW E7 ib   ;OUT ib, AX
   E7 ib   ;OUT ib, EAX
RQ E7 ib   ;OUT ib, RAX

#TODO Reminder: the word call isn't relative like the others [which is why it's disabled]
#RW E8 iw   ;CALL iw
   E8 id   ;CALL id
#TODO ADD JMPF [EA]
   EB ib   ;JMP ib
   
#RW E9 iw   ;JMP iw
   E9 id   ;JMP id

   EC      ;IN AL, DX
   EC      ;IN DX
RW ED      ;IN AX, DX
   ED      ;IN EAX, DX
RQ ED      ;IN RAX, DX
   EE      ;OUT AL, DX
   EE      ;OUT DX
RW EF      ;OUT DX, AX
   EF      ;OUT DX, EAX
RQ EF      ;OUT DX, RAX

#TODO ADD PREFIX SUPPORT (LIKE [F0] LOCK)

   F1      ;INT1
   F1      ;ICEBP
   
#ALSO PREFIXES [F2, F3] (REP)

   F4      ;HLT
   F5      ;CMC

   F6 /0 ib;TEST rmb, ib
   F6 /1 ib;TEST rmb, ib
   F6 /2   ;NOT  rmb
   F6 /3   ;NEG  rmb
   F6 /4   ;MUL  rmb
   F6 /5   ;IMUL rmb
   F6 /6   ;DIV  rmb
   F6 /7   ;IDIV rmb
   
RW F7 /0 iw;TEST rmw, iw
RW F7 /1 iw;TEST rmw, iw
RW F7 /2   ;NOT  rmw
RW F7 /3   ;NEG  rmw
RW F7 /4   ;MUL  rmw
RW F7 /5   ;IMUL rmw
RW F7 /6   ;DIV  rmw
RW F7 /7   ;IDIV rmw
   
   F7 /0 id;TEST rmd, id
   F7 /1 id;TEST rmd, id
   F7 /2   ;NOT  rmd
   F7 /3   ;NEG  rmd
   F7 /4   ;MUL  rmd
   F7 /5   ;IMUL rmd
   F7 /6   ;DIV  rmd
   F7 /7   ;IDIV rmd
   
RQ F7 /0 iq;TEST rmq, iq
RQ F7 /1 iq;TEST rmq, iq
RQ F7 /2   ;NOT  rmq
RQ F7 /3   ;NEG  rmq
RQ F7 /4   ;MUL  rmq
RQ F7 /5   ;IMUL rmq
RQ F7 /6   ;DIV  rmq
RQ F7 /7   ;IDIV rmq

   F8      ;CLC
   F9      ;STC
   FA      ;CLI
   FB      ;STI
   FC      ;CLD
   FD      ;STD
   
   FE /0   ;INC rmb
   FE /1   ;DEC rmb
   
RW FF /0   ;INC rmw
   FF /0   ;INC rmd
RQ FF /0   ;INC rmq
RW FF /1   ;DEC rmw
   FF /1   ;DEC rmd
RQ FF /1   ;DEC rmq
RW FF /2   ;CALL rmw
   FF /2   ;CALL rmd
RQ FF /2   ;CALL rmq
#[TODO ADD FF /3 CALLF]
RW FF /4   ;JMP rmw
   FF /4   ;JMP rmd
RQ FF /4   ;JMP rmq
#[TODO ADD FF /5 JMPF]
#TODO Note: push rmw&rmd for 32bit and push rmw&rmq for 64bit
RW FF /6   ;PUSH rmw
   FF /6   ;PUSH rmd
RQ FF /6   ;PUSH rmq


#      == MOVSX immediate ==

   0F BE /r ;MOVSX rw, rmb
   0F BE /r ;MOVSX rd, rmb
#64bit only
RQ 0F BE /r ;MOVSX rq, rmb
   0F BF /r ;MOVSX rd, rmw
#64bit only
RQ 0F BF /r ;MOVSX rq, rmw

#      == SETCC immediate ==
   0F 97    ;SETA   rmb
   0F 93    ;SETAE  rmb
   0F 92    ;SETB   rmb
   0F 96    ;SETBE  rmb
   0F 92    ;SETC   rmb
   0F 94    ;SETE   rmb
   0F 9F    ;SETG   rmb
   0F 9D    ;SETGE  rmb
   0F 9C    ;SETL   rmb
   0F 9E    ;SETLE  rmb
   0F 96    ;SETNA  rmb
   0F 92    ;SETNAE rmb
   0F 93    ;SETNB  rmb
   0F 97    ;SETNBE rmb
   0F 93    ;SETNC  rmb
   0F 95    ;SETNE  rmb
   0F 9C    ;SETNGE rmb
   0F 9D    ;SETNL  rmb
   0F 9F    ;SETNLE rmb
   0F 91    ;SETNO  rmb
   0F 9B    ;SETNP  rmb
   0F 99    ;SETNS  rmb
   0F 95    ;SETNZ  rmb
   0F 90    ;SETO   rmb
   0F 9A    ;SETP   rmb
   0F 9A    ;SETPE  rmb
   0F 9B    ;SETPO  rmb
   0F 98    ;SETS   rmb
   0F 94    ;SETZ   rmb
   
   
#      == JUMPS 32bit ==
   0F 80 id   ;JO id
   0F 81 id   ;JNO id
   0F 82 id   ;JB id
   0F 82 id   ;JNAE id
   0F 82 id   ;JC id
   0F 83 id   ;JNB id
   0F 83 id   ;JAE id
   0F 83 id   ;JNC id 
   0F 84 id   ;JZ id
   0F 84 id   ;JE id
   0F 85 id   ;JNZ id
   0F 85 id   ;JNE id
   0F 86 id   ;JBE id
   0F 86 id   ;JNA id
   0F 87 id   ;JNBE id
   0F 87 id   ;JA id
   0F 88 id   ;JS id
   0F 89 id   ;JNS id
   0F 8A id   ;JP id
   0F 8A id   ;JPE id
   0F 8B id   ;JNP id
   0F 8B id   ;JPO id
   0F 8C id   ;JL id
   0F 8C id   ;JNGE id
   0F 8D id   ;JNL id
   0F 8D id   ;JGE id
   0F 8E id   ;JLE id
   0F 8E id   ;JNG id
   0F 8F id   ;JNLE id
   0F 8F id   ;JG id
#      == END OF JUMPS ==

#      == CMOVCC ==
   0F 40 /r   ;CMOVO rd, rmd
RQ 0F 40 /r   ;CMOVO rq, rmq
   0F 41 /r   ;CMOVNO rd, rmd
RQ 0F 41 /r   ;CMOVNO rq, rmq
   0F 42 /r   ;CMOVB rd, rmd
RQ 0F 42 /r   ;CMOVB rq, rmq
   0F 42 /r   ;CMOVNAE rd, rmd
RQ 0F 42 /r   ;CMOVNAE rq, rmq
   0F 42 /r   ;CMOVC rd, rmd
RQ 0F 42 /r   ;CMOVC rq, rmq
   0F 43 /r   ;CMOVNB rd, rmd
RQ 0F 43 /r   ;CMOVNB rq, rmq
   0F 43 /r   ;CMOVAE rd, rmd
RQ 0F 43 /r   ;CMOVAE rq, rmq
   0F 43 /r   ;CMOVNC rd, rmd
RQ 0F 43 /r   ;CMOVNC rq, rmq
   0F 44 /r   ;CMOVZ rd, rmd
RQ 0F 44 /r   ;CMOVZ rq, rmq
   0F 44 /r   ;CMOVE rd, rmd
RQ 0F 44 /r   ;CMOVE rq, rmq
   0F 45 /r   ;CMOVNZ rd, rmd
RQ 0F 45 /r   ;CMOVNZ rq, rmq
   0F 45 /r   ;CMOVNE rd, rmd
RQ 0F 45 /r   ;CMOVNE rq, rmq
   0F 46 /r   ;CMOVBE rd, rmd
RQ 0F 46 /r   ;CMOVBE rq, rmq
   0F 46 /r   ;CMOVNA rd, rmd
RQ 0F 46 /r   ;CMOVNA rq, rmq
   0F 47 /r   ;CMOVNBE rd, rmd
RQ 0F 47 /r   ;CMOVNBE rq, rmq
   0F 47 /r   ;CMOVA rd, rmd
RQ 0F 47 /r   ;CMOVA rq, rmq
   0F 48 /r   ;CMOVS rd, rmd
RQ 0F 48 /r   ;CMOVS rq, rmq
   0F 49 /r   ;CMOVNS rd, rmd
RQ 0F 49 /r   ;CMOVNS rq, rmq
   0F 4A /r   ;CMOVP rd, rmd
RQ 0F 4A /r   ;CMOVP rq, rmq
   0F 4A /r   ;CMOVPE rd, rmd
RQ 0F 4A /r   ;CMOVPE rq, rmq
   0F 4B /r   ;CMOVNP rd, rmd
RQ 0F 4B /r   ;CMOVNP rq, rmq
   0F 4B /r   ;CMOVPO rd, rmd
RQ 0F 4B /r   ;CMOVPO rq, rmq
   0F 4C /r   ;CMOVL rd, rmd
RQ 0F 4C /r   ;CMOVL rq, rmq
   0F 4C /r   ;CMOVNGE rd, rmd
RQ 0F 4C /r   ;CMOVNGE rq, rmq
   0F 4D /r   ;CMOVNL rd, rmd
RQ 0F 4D /r   ;CMOVNL rq, rmq
   0F 4D /r   ;CMOVGE rd, rmd
RQ 0F 4D /r   ;CMOVGE rq, rmq
   0F 4E /r   ;CMOVLE rd, rmd
RQ 0F 4E /r   ;CMOVLE rq, rmq
   0F 4E /r   ;CMOVNG rd, rmd
RQ 0F 4E /r   ;CMOVNG rq, rmq
   0F 4F /r   ;CMOVNLE rd, rmd
RQ 0F 4F /r   ;CMOVNLE rq, rmq
   0F 4F /r   ;CMOVG rd, rmd
RQ 0F 4F /r   ;CMOVG rq, rmq

#      == 2 byte default inst  ==
   0F AF /r    ;IMUL rd, rmd
RQ 0F AF /r    ;IMUL rq, rmq
   0F AC /r ib ;SHRD rmd, rd, ib
   0F AD /r    ;SHRD rmd, rd, CL
RQ 0F AC /r ib ;SHRD rmq, rq, ib
RQ 0F AD /r    ;SHRD rmq, rq, CL
   0F A4 /r ib ;SHLD rmd, rd, ib
   0F A5 /r    ;SHLD rmd, rd, CL
RQ 0F A4 /r ib ;SHLD rmq, rq, ib
RQ 0F A5 /r    ;SHLD rmq, rq, CL
   
   
#DIRECT BYTES
   ib      ;DB ib
   iw      ;DW iw
   id      ;DD id
   iq      ;DQ iq