#REX: RW = 66, RQ = 48
#ib,iw,id,iq = immediate byte/word/dword/qword
#/0 Immediate Encoding (0 means 0st immediate command)
#/r MOD-REG-R/M Encoding
#rmb/rmw/rmd/rmq register/displacement byte/word/dword/qword
#rb/rw/rd/rq register byte/word/dword/qword

#      == ADD ==
#ADD <rmx> <rmx>
   00 /r   ;ADD rmb,rb
RW 01 /r   ;ADD rmw,rw
   01 /r   ;ADD rmd,rd
RQ 01 /r   ;ADD rmq,rq
   02 /r   ;ADD rb,rmb
RW 03 /r   ;ADD rw,rmw
   03 /r   ;ADD rd,rmd
RQ 03 /r   ;ADD rq,rmq
#ADD <al/ax/eax/rax> immediate
   04 ib   ;ADD AL, ib
RW 05 iw   ;ADD AX, iw
   05 id   ;ADD EAX,id
RQ 05 id   ;ADD RAX,id
#ADD <r8/r16/r32/r64> immediate
   80 /0 ib;ADD rmb,ib
RW 81 /0 iw;ADD rmw,iw
   81 /0 id;ADD rmd,id
RQ 81 /0 id;ADD rmq,id
   82 /0 ib;ADD rmb,ib
RW 83 /0 ib;ADD rmw,ib
   83 /0 ib;ADD rmd,ib
RQ 83 /0 ib;ADD rmq,ib
#   ==END OF ADD ==

#Utility Pushes and Pops
   06      ;PUSH es
   07      ;POP  es
#   ==END OF UTIL ==